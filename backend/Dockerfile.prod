###########
# BUILDER #
###########

# pull official base image
FROM python:3.9 as builder

# set work directory
WORKDIR /leap_careerwatch/backend

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV PYTHONPATH "${PYTHONPATH}:/dummy-django-react-proj"

# # install psycopg2 dependencies
RUN apt-get update && apt-get install -y postgresql-server-dev-all gcc python3-dev libc6-dev

# lint
RUN pip install --upgrade pip
# RUN pip install flake8==3.9.2
COPY . .
# RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /leap_careerwatch/backend/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.9

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN groupadd -r app && useradd -r -g app app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/backend
RUN mkdir $APP_HOME
WORKDIR $APP_HOME

# create the appropriate directories
# RUN mkdir $APP_HOME/staticfiles
# WORKDIR $APP_HOME

# install dependencies
RUN apt-get update && apt-get install -y libpq-dev netcat-traditional
COPY --from=builder /leap_careerwatch/backend/wheels /wheels
COPY --from=builder /leap_careerwatch/backend/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh .
RUN sed -i 's/\r$//g'  $APP_HOME/entrypoint.prod.sh
RUN chmod +x  $APP_HOME/entrypoint.prod.sh

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/backend/entrypoint.prod.sh"]